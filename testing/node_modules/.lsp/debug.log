Hello - from /home/samds/.vscode-server/extensions/jaredly.reason-vscode-1.7.13/bin.native.linux
Previous log location: /tmp/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml","languageId":"ocaml","version":1,"text":"\ntype 'a tree = Leaf of 'a | Tree of ('a * ('a tree list)) \n\nmodule type GraphADT = sig\n  type 'a graph\n  val empty : unit ->'a graph\n  val add_node : 'a -> 'a graph -> 'a graph\n  val add_arc : 'a -> 'a -> 'a graph -> 'a graph\n  val adjacents : 'a -> 'a graph -> 'a list    \n  val is_empty : 'a graph -> bool\n\n  exception TheGraphIsEmpty\n  exception TheNodeIsNotInGraph\n\nend\n\nmodule Graph : GraphADT = struct\n  (** (node list), (arc(element_1,element_2)) list *)\n  type 'a graph = Graph of ('a list) * (('a * 'a) list)\n  \n  let empty () = Graph([],[]) \n  let is_empty g = match g with Graph(nodes,_) -> (nodes = [])\n\n  exception TheGraphIsEmpty\n  exception TheNodeIsNotInGraph\n\n  let rec is_in_list ?(res=false) x = function\n    | [] -> res\n    | h::t -> if x=h then true else is_in_list ~res:res x t\n  \n  let node_is_in_graph node = function\n    | Graph(n,_) -> (is_in_list node n)  \n\n  let rec add_in_list ?(res=[]) x = function\n    | [] -> List.rev (x::res)\n    | h::t when x=h -> List.rev_append t (h::res)\n    | h::t -> add_in_list ~res:(h::res) x t\n\n  let add_node n = function\n    | Graph([],[]) -> Graph([n],[])\n    | Graph(nodes, arcs) -> Graph(add_in_list n nodes, arcs)\n  \n  let add_arc e_sx e_dx = function\n    | Graph(nodes,arcs) -> \n        Graph(add_in_list e_sx (add_in_list e_dx nodes), (add_in_list (e_sx,e_dx) arcs))\n\n  (** crea una lista filtrando il primo elemento della coppia*)\n  let adjacents n = \n    let adjacents n l = List.map snd (List.filter (fun x -> ((fst x) = n)) l) \n    in function Graph(_, arcs) -> (adjacents n arcs)\n\nend\n\n"}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
Sending response {"id": 1, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","id":2,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
Sending response {"id": 2, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.014066696167ms
Sending response {"id": 3, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":4,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00905990600586ms
Sending response {"id": 4, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":5,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0100135803223ms
Sending response {"id": 5, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":6,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00882148742676ms
Sending response {"id": 6, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":7,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0100135803223ms
Sending response {"id": 7, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":8,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00905990600586ms
Sending response {"id": 8, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":9,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0119209289551ms
Sending response {"id": 9, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/lists.ml","languageId":"ocaml","version":1,"text":"(*Testing lists*)\nmodule MyLists = struct\n    exception ListEmpty\n    let add list n = match list with\n                        [] -> [n]\n                        | h::t -> n::list;;\n\n    let rec print_list ls = match ls with\n        [] -> print_string(\"\\n\") |\n        h::t -> begin print_int h; print_string(\" \"); print_list t end;;\n\n    let rec append l n = match l with\n        [] -> [n] |\n        h::t -> h:: append t n\n\n    let count x l =\n        let rec boh tot x = function\n            [] -> tot \n            | h::t -> if h==x then boh (tot+1) x t else boh tot x t\n            in boh 0 x l\n    let rec count ?(pos=0) x = function\n            [] -> pos\n            | h::t -> if h==x then count ~pos:(pos+1) x t\n                else  count ~pos:(pos) x t\n    let find x l = \n        let rec find pos x = function\n            [] -> (-1)\n            | h::t -> if h==x \n                then pos\n                else find (pos+1) x t\n        in find 0 x l\n\n    let slice l i f = \n        let rec slice offset i f = function \n            [] -> raise ListEmpty\n            | h::t -> if (i<=offset && offset <=f)\n                then h::slice (offset+1) i f t\n                else slice (offset+1) i f t\n        in slice 0 i f l\n\n    let rec remove x = function \n        [] -> []\n        | h::t -> if h==x then remove x t\n        else h::remove x t\n    \n    let rec remove_once x = function \n        [] -> []\n        | h::t -> if h==x then t\n        else h::remove_once x t\n\n\n    let rec map ~f = function \n        | [] -> []\n        | h::t -> (f h)::(map f t)\n\n    let rec filter f = function\n        | [] -> []\n        | h::t -> if f h then h::filter f t else filter f t\n    \n    let rec reduce acc f = function\n        | [] -> acc\n        | h::t -> reduce (f acc h) f t\n    \n    let exists p l = reduce false (||) (map p l)\n    let forall p l = reduce true (&&) (map p l)\n\n    let rec zip_longest l1 l2 = match (l1,l2) with\n        | [],[] | [],_ | _,[] -> []\n        | (h1::t1 , h2::t2) -> (h1,h2)::(zip_longest t1 t2)\n\n\n    type 'a group = {mutable g: 'a list}\n    let empty_group = fun x->{g = []}\n\n    let rec group_by f ?(output: 'a group array = Array.init 10 empty_group) = function \n        |[] -> output\n        | h::t -> output.((f h)).g <- output.((f h)).g@[h]; group_by f ~output:output t\n\n    let rec pairwise = function        \n        | e1::e2::t -> (e1,e2)::(pairwise (e2::t))\n        | _ -> []\n    \n    let enumerate l =\n        let rec enumerate count = function\n            | h::t -> (count,h)::enumerate (count+1) t\n            | [] -> []\n        in enumerate 0 l\n    \n    \n    \nend"}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/lists.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Sending response {"id": 10, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":11,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/lists.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00810623168945ms
Sending response {"id": 11, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":12,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/lists.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00905990600586ms
Sending response {"id": 12, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":13,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/lists.ml"},"range":{"start":{"line":74,"character":33},"end":{"line":74,"character":33}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Sending response {"id": 13, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":14,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/lists.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00905990600586ms
Sending response {"id": 14, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/dfs.ml","languageId":"ocaml","version":1,"text":"open Graphs\n\nlet arcs_to_graph arcs = \n  let rec arcs_to_graph g = function\n    | (f,s) ::t -> (arcs_to_graph (Graphs.Graph.add_arc f s g) t)\n    | [] -> g\n  in (arcs_to_graph (Graphs.Graph.empty () ) arcs) \n \n\nlet graph_to_tree g root = \n  let rec make_tree n = function\n    | [] -> Leaf(n)\n    | adj_to_n -> Tree(n,(make_forest adj_to_n))\n        and make_forest = function\n          | [] -> []\n          | h::t -> (make_tree h (adjacents h g))::(make_forest t)\n  in make_tree root (adjacents root g) \n\n(*\nlet dfs graph v = \n  let rec dfs graph v g = function\n    | [] -> g\n    | h::t when (Graphs.Graph.node_is_in_graph h g) -> dfs graph v g t \n    | h::t -> \n      dsf graph v (Graphs.Graph.add_arc v h (dsf graph h (Graphs.Graph.add_node h g)(Graphs.Graph.adjacent h graph))) t\n    in if(is_empty g) then raise TheGraphIsEmpty\n    else if not(node_is_in_graph v graph) then raise TheNodeIsNotInGraph\n    else graph_to_tree (dfs graph v (Graphs.Graph.add_node v (Graphs.Graph.empty())) (Graphs.Graph.adjacents v graph)) v\n*)"}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":15,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/dfs.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Sending response {"id": 15, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":16,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/dfs.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00905990600586ms
Sending response {"id": 16, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":17,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/dfs.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0119209289551ms
Sending response {"id": 17, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":18,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/dfs.ml"},"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":30}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Sending response {"id": 18, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/dfs.ml"},"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":30}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":30}},"message":"Unbound value adjacents","severity":1,"source":"ocamllsp"}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00882148742676ms
Sending response {"id": 19, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":20,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/dfs.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00905990600586ms
Sending response {"id": 20, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":20}}
Read message 
{"jsonrpc":"2.0","id":21,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00810623168945ms
Sending response {"id": 21, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":22,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00905990600586ms
Sending response {"id": 22, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":23,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml"},"position":{"line":5,"character":22}}}
[server] Got a method textDocument/hover
[server] processing took 0.00905990600586ms
Sending response {"id": 23, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml","version":2},"contentChanges":[{"text":"type 'a tree = Leaf of 'a | Tree of ('a * ('a tree list)) \n\nmodule type GraphADT = sig\n  type 'a graph\n  val empty : unit ->'a graph\n  val add_node : 'a -> 'a graph -> 'a graph\n  val add_arc : 'a -> 'a -> 'a graph -> 'a graph\n  val adjacents : 'a -> 'a graph -> 'a list    \n  val is_empty : 'a graph -> bool\n\n  exception TheGraphIsEmpty\n  exception TheNodeIsNotInGraph\n\nend\n\nmodule Graph : GraphADT = struct\n  (** (node list), (arc(element_1,element_2)) list *)\n  type 'a graph = Graph of ('a list) * (('a * 'a) list)\n  \n  let empty () = Graph([],[]) \n  let is_empty g = match g with Graph(nodes,_) -> (nodes = [])\n\n  exception TheGraphIsEmpty\n  exception TheNodeIsNotInGraph\n\n  let rec is_in_list ?(res=false) x = function\n    | [] -> res\n    | h::t -> if x=h then true else is_in_list ~res:res x t\n  \n  let node_is_in_graph node = function\n    | Graph(n,_) -> (is_in_list node n)  \n\n  let rec add_in_list ?(res=[]) x = function\n    | [] -> List.rev (x::res)\n    | h::t when x=h -> List.rev_append t (h::res)\n    | h::t -> add_in_list ~res:(h::res) x t\n\n  let add_node n = function\n    | Graph([],[]) -> Graph([n],[])\n    | Graph(nodes, arcs) -> Graph(add_in_list n nodes, arcs)\n  \n  let add_arc e_sx e_dx = function\n    | Graph(nodes,arcs) -> \n        Graph(add_in_list e_sx (add_in_list e_dx nodes), (add_in_list (e_sx,e_dx) arcs))\n\n  (** crea una lista filtrando il primo elemento della coppia*)\n  let adjacents n = \n    let adjacents n l = List.map snd (List.filter (fun x -> ((fst x) = n)) l) \n    in function Graph(_, arcs) -> (adjacents n arcs)\n\nend\n\n"}]}}
Read message 
{"jsonrpc":"2.0","id":24,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00905990600586ms
Sending response {"id": 24, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":25,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00810623168945ms
Sending response {"id": 25, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":26,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0100135803223ms
Sending response {"id": 26, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":27,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00882148742676ms
Sending response {"id": 27, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":28,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Sending response {"id": 28, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":29,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml"},"position":{"line":4,"character":11}}}
[server] Got a method textDocument/definition
[server] processing took 0.00786781311035ms
Sending response {"id": 29, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":30,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml"},"position":{"line":4,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.00810623168945ms
Sending response {"id": 30, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml","version":2},"contentChanges":[{"text":"type 'a tree = Leaf of 'a | Tree of ('a * ('a tree list)) \n\nmodule type GraphADT = sig\n  type 'a graph\n  val empty : unit ->'a graph\n  val add_node : 'a -> 'a graph -> 'a graph\n  val add_arc : 'a -> 'a -> 'a graph -> 'a graph\n  val adjacents : 'a -> 'a graph -> 'a list    \n  val is_empty : 'a graph -> bool\n\n  exception TheGraphIsEmpty\n  exception TheNodeIsNotInGraph\n\nend\n\nmodule Graph : GraphADT = struct\n  (** (node list), (arc(element_1,element_2)) list *)\n  type 'a graph = Graph of ('a list) * (('a * 'a) list)\n  \n  let empty () = Graph([],[]) \n  let is_empty g = match g with Graph(nodes,_) -> (nodes = [])\n\n  exception TheGraphIsEmpty\n  exception TheNodeIsNotInGraph\n\n  let rec is_in_list ?(res=false) x = function\n    | [] -> res\n    | h::t -> if x=h then true else is_in_list ~res:res x t\n  \n  let node_is_in_graph node = function\n    | Graph(n,_) -> (is_in_list node n)  \n\n  let rec add_in_list ?(res=[]) x = function\n    | [] -> List.rev (x::res)\n    | h::t when x=h -> List.rev_append t (h::res)\n    | h::t -> add_in_list ~res:(h::res) x t\n\n  let add_node n = function\n    | Graph([],[]) -> Graph([n],[])\n    | Graph(nodes, arcs) -> Graph(add_in_list n nodes, arcs)\n  \n  let add_arc e_sx e_dx = function\n    | Graph(nodes,arcs) -> \n        Graph(add_in_list e_sx (add_in_list e_dx nodes), (add_in_list (e_sx,e_dx) arcs))\n\n  (** crea una lista filtrando il primo elemento della coppia*)\n  let adjacents n = \n    let adjacents n l = List.map snd (List.filter (fun x -> ((fst x) = n)) l) \n    in function Graph(_, arcs) -> (adjacents n arcs)\n\nend\n\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml","version":2}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":31,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml"},"position":{"line":4,"character":10}}}
[server] Got a method textDocument/definition
[server] processing took 0.00905990600586ms
Sending response {"id": 31, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":32,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/samds/repos/lab-lp/testing/graphs.ml"},"range":{"start":{"line":8,"character":33},"end":{"line":8,"character":33}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 32, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":33,"method":"shutdown","params":null}
Sending response {"id": 33, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"exit","params":null}
Got exit! Terminating loop
Finished
